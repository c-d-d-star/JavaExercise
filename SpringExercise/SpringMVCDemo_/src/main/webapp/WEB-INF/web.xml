<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
  <!--声明springmvc的核心对象
          访问mymvc地址后，报错，文件没有找到。找到文件是/WEB-INF/springmvc-servlet.xml或者myweb-servlet.xml(这个)
          错误原因：在Servlet的init()方法中，创建springmvc使用的容器对象WebApplicationContext
          WebApplicationContext ctx=new ClassPathXmlApplicationContext(配置文件)
          配置文件的默认路径：/WEB-INF/<servlet-name>-servlet.xml
          DispatcherServlet作用:
          1.在init()中创建springmvc的容器对象 WebApplicationContext，创建springmvc配置文件的所有Java对象。
              java对象就是Controller对象
          2.DispatcherServlet 是一个Servlet，能够接受请求。
  -->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--        如果是自定义的文件，需要在这写自定义配置文件的位置    和监听器的是一样的-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>

    <!--        在服务器启动时候创建对象，和容器的顺序    在启动时装载对象 随意给个值要求大于等于0  数值越小，创建的越早-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!--        url-pattern 作用：把一些请求交给servlet处理   就例如将/mymvc交给springmvc处理
                使用中央调度器（DispatcherServlet）  1.使用扩展名方式，格式/*.xxx  例如：xxx.xml表示以xml结尾的都算
    -->
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
</web-app>